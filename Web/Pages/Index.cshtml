@page
@model IndexModel
@{
    ViewData["Title"] = "NiceTypings";
}

<style>
    .ActiveWord {
        background-color:lightgray;
    }
    .RightWord {
        background-color: lightgreen;
        color: green;
    }
    .WrongWord {
        background-color: indianred;
        color: brown;
    }
    .wpm {
        color: green;
    }
    p span{
        padding: 2px 2px 3px 2px;
    }
    p:first-child{
        border-bottom-left-radius: 5px;
        border-top-left-radius: 5px;
    }
    a {
        text-decoration: none;
    }
</style>

<div class="text-center align-middle">
    <h1 class="display-4">NiceTypings</h1>
    <nav>
        <a>10</a>
    </nav>
    <p id="typingZone"></p>
    <input class="border-2 rounded-lg " id="inputField" type="text" />
    <h3 class="wpm" id="wpmResult"></h3>
</div>

<script>
    var maxWords = 10;
    var activeWord;
    var words;
    var inputField;

    var clockStarted = false;
    var testFinish = false;

    var wpm = 0;
    var allwords = 0;
    var wordCount = 0;
    var errorCount = 0;
    var seconds = 0;

    window.onload = LoadTest(maxWords);

    function LoadTest() {
        console.log("test has been loaded");
        var typingZoneTest = document.getElementById("typingZone");
        let wordDb = "about|above|add|after|again|air|all|almost|along|also|always|America|an|and|animal|another|answer|any|are|around|as|ask|at|away|back|be|because|been|before|began|begin|being|below|between|big|book|both|boy|but|by|call|came|can|car|carry|change|children|city|close|come|could|country|cut|day|did|different|do|does|don't|down|each|earth|eat|end|enough|even|every|example|eye|face|family|far|father|feet|few|find|first|follow|food|for|form|found|four|from|get|girl|give|go|good|got|great|group|grow|had|hand|hard|has|have|he|head|hear|help|her|here|high|him|his|home|house|how|idea|if|important|in|Indian|into|is|it|its|it's|just|keep|kind|know|land|large|last|later|learn|leave|left|let|letter|life|light|like|line|list|little|live|long|look|made|make|man|many|may|me|mean|men|might|mile|miss|more|most|mother|mountain|move|much|must|my|name|near|need|never|new|next|night|no|not|now|number|of|off|often|oil|old|on|once|one|only|open|or|other|our|out|over|own|page|paper|part|people|picture|place|plant|play|point|put|question|quick|quickly|quite|read|really|right|river|run|said|same|saw|say|school|sea|second|see|seem|sentence|set|she|should|show|side|small|so|some|something|sometimes|song|soon|sound|spell|start|state|still|stop|story|study|such|take|talk|tell|than|that|the|their|them|then|there|these|they|thing|think|this|those|thought|three|through|time|to|together|too|took|tree|try|turn|two|under|until|up|us|use|very|walk|want|was|watch|water|way|we|well|went|were|what|when|where|which|while|white|who|why|will|with|without|word|work|world|would|write|year|you|young|your".replaceAll("|", " ");
        let looseWords = wordDb.split(" ");
        looseWords = looseWords.sort(() => Math.random() - 0.5)

        typingZoneTest.innerHTML = "";
        for (var i = 0; i < maxWords; i++) {
            typingZoneTest.innerHTML += '<span class="">' + looseWords[i] + ' </span>';
        }
        words = document.getElementById("typingZone");
        activeWord = words.getElementsByTagName("span")[0];
        activeWord.setAttribute("class", "ActiveWord");
        inputField = document.getElementById("inputField");

        ResetFields();
        inputField.focus();
    }

    function ResetFields() {
        inputField.value = "";
        clockStarted = false;
        testFinish = false;
        allwords = 0;
        wordCount = 0;
        errorCount = 0;
        seconds = 0;
        wpm = 0;
        document.getElementById("wpmResult").innerHTML = "";
    }

    function SetActiveWord() {
        if (allwords < (maxWords-1)) {
            allwords++;
            wordCount++;
            activeWord = words.getElementsByTagName("span")[allwords];
            activeWord.classList.add("ActiveWord");
        } else {
            //finish test
            allwords++;
            testFinish = true;
            clockStarted = false;
            wpm = Math.round((wordCount / seconds)*60);
            document.getElementById("wpmResult").innerHTML = wpm + " WPM";
        }
        }

    function Update() {
        //console.log(inputField.value.trim() + " " + activeWord.innerHTML.trim());
        if (inputField.value.trim() === activeWord.innerHTML.trim()) {
            let prev = activeWord;
            prev.classList.remove("activeWord");
            prev.classList.add("RightWord");
            inputField.value = "";
            SetActiveWord();
        } else if(inputField.value.trim() != "") {
            let prev = activeWord;
            prev.classList.remove("activeWord");
            prev.classList.add("WrongWord");
            inputField.value = "";
            errorCount++;
            SetActiveWord();
        }
    }
    //counter
    //let counter = document.getElementById("counter");
    function incrementSeconds() {
        if (clockStarted) {
            seconds += 1;
            //counter.innerHTML = seconds;
        }
    }
    var incrementClock = setInterval(incrementSeconds, 1000);


    window.onkeydown = function (event) {
        if (event.keyCode == 32) {
            Update();
        } else if (event.keyCode == 27) {
            LoadTest();
        } else if (!clockStarted && !testFinish) {
            if (inputField === document.activeElement) {
                console.log("clock started")
                clockStarted = true;
            }
        }
    }
</script>
